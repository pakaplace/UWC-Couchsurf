module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.30.0). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregatePlace {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

enum GENDER {
  MALE
  FEMALE
}

scalar Long

type Mutation {
  createPlace(data: PlaceCreateInput!): Place!
  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place
  updateManyPlaces(data: PlaceUpdateManyMutationInput!, where: PlaceWhereInput): BatchPayload!
  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!
  deletePlace(where: PlaceWhereUniqueInput!): Place
  deleteManyPlaces(where: PlaceWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Place {
  id: ID!
  title: String!
  description: String
  latitude: String!
  longitude: String!
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
  ownedBy: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type PlaceConnection {
  pageInfo: PageInfo!
  edges: [PlaceEdge]!
  aggregate: AggregatePlace!
}

input PlaceCreateInput {
  id: ID
  title: String!
  description: String
  latitude: String!
  longitude: String!
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
  ownedBy: UserCreateOneWithoutPlacesInput!
}

input PlaceCreateManyWithoutOwnedByInput {
  create: [PlaceCreateWithoutOwnedByInput!]
  connect: [PlaceWhereUniqueInput!]
}

input PlaceCreateWithoutOwnedByInput {
  id: ID
  title: String!
  description: String
  latitude: String!
  longitude: String!
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
}

type PlaceEdge {
  node: Place!
  cursor: String!
}

enum PlaceOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  country_ASC
  country_DESC
  street_ASC
  street_DESC
  nearbyDescription_ASC
  nearbyDescription_DESC
  accomodationDescription_ASC
  accomodationDescription_DESC
  bedrooms_ASC
  bedrooms_DESC
  bathrooms_ASC
  bathrooms_DESC
  expirationDate_ASC
  expirationDate_DESC
  numGuests_ASC
  numGuests_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PlacePreviousValues {
  id: ID!
  title: String!
  description: String
  latitude: String!
  longitude: String!
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

input PlaceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  state: String
  state_not: String
  state_in: [String!]
  state_not_in: [String!]
  state_lt: String
  state_lte: String
  state_gt: String
  state_gte: String
  state_contains: String
  state_not_contains: String
  state_starts_with: String
  state_not_starts_with: String
  state_ends_with: String
  state_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  nearbyDescription: String
  nearbyDescription_not: String
  nearbyDescription_in: [String!]
  nearbyDescription_not_in: [String!]
  nearbyDescription_lt: String
  nearbyDescription_lte: String
  nearbyDescription_gt: String
  nearbyDescription_gte: String
  nearbyDescription_contains: String
  nearbyDescription_not_contains: String
  nearbyDescription_starts_with: String
  nearbyDescription_not_starts_with: String
  nearbyDescription_ends_with: String
  nearbyDescription_not_ends_with: String
  accomodationDescription: String
  accomodationDescription_not: String
  accomodationDescription_in: [String!]
  accomodationDescription_not_in: [String!]
  accomodationDescription_lt: String
  accomodationDescription_lte: String
  accomodationDescription_gt: String
  accomodationDescription_gte: String
  accomodationDescription_contains: String
  accomodationDescription_not_contains: String
  accomodationDescription_starts_with: String
  accomodationDescription_not_starts_with: String
  accomodationDescription_ends_with: String
  accomodationDescription_not_ends_with: String
  bedrooms: String
  bedrooms_not: String
  bedrooms_in: [String!]
  bedrooms_not_in: [String!]
  bedrooms_lt: String
  bedrooms_lte: String
  bedrooms_gt: String
  bedrooms_gte: String
  bedrooms_contains: String
  bedrooms_not_contains: String
  bedrooms_starts_with: String
  bedrooms_not_starts_with: String
  bedrooms_ends_with: String
  bedrooms_not_ends_with: String
  bathrooms: String
  bathrooms_not: String
  bathrooms_in: [String!]
  bathrooms_not_in: [String!]
  bathrooms_lt: String
  bathrooms_lte: String
  bathrooms_gt: String
  bathrooms_gte: String
  bathrooms_contains: String
  bathrooms_not_contains: String
  bathrooms_starts_with: String
  bathrooms_not_starts_with: String
  bathrooms_ends_with: String
  bathrooms_not_ends_with: String
  expirationDate: String
  expirationDate_not: String
  expirationDate_in: [String!]
  expirationDate_not_in: [String!]
  expirationDate_lt: String
  expirationDate_lte: String
  expirationDate_gt: String
  expirationDate_gte: String
  expirationDate_contains: String
  expirationDate_not_contains: String
  expirationDate_starts_with: String
  expirationDate_not_starts_with: String
  expirationDate_ends_with: String
  expirationDate_not_ends_with: String
  numGuests: String
  numGuests_not: String
  numGuests_in: [String!]
  numGuests_not_in: [String!]
  numGuests_lt: String
  numGuests_lte: String
  numGuests_gt: String
  numGuests_gte: String
  numGuests_contains: String
  numGuests_not_contains: String
  numGuests_starts_with: String
  numGuests_not_starts_with: String
  numGuests_ends_with: String
  numGuests_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [PlaceScalarWhereInput!]
  OR: [PlaceScalarWhereInput!]
  NOT: [PlaceScalarWhereInput!]
}

type PlaceSubscriptionPayload {
  mutation: MutationType!
  node: Place
  updatedFields: [String!]
  previousValues: PlacePreviousValues
}

input PlaceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PlaceWhereInput
  AND: [PlaceSubscriptionWhereInput!]
  OR: [PlaceSubscriptionWhereInput!]
  NOT: [PlaceSubscriptionWhereInput!]
}

input PlaceUpdateInput {
  title: String
  description: String
  latitude: String
  longitude: String
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
  ownedBy: UserUpdateOneRequiredWithoutPlacesInput
}

input PlaceUpdateManyDataInput {
  title: String
  description: String
  latitude: String
  longitude: String
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
}

input PlaceUpdateManyMutationInput {
  title: String
  description: String
  latitude: String
  longitude: String
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
}

input PlaceUpdateManyWithoutOwnedByInput {
  create: [PlaceCreateWithoutOwnedByInput!]
  delete: [PlaceWhereUniqueInput!]
  connect: [PlaceWhereUniqueInput!]
  set: [PlaceWhereUniqueInput!]
  disconnect: [PlaceWhereUniqueInput!]
  update: [PlaceUpdateWithWhereUniqueWithoutOwnedByInput!]
  upsert: [PlaceUpsertWithWhereUniqueWithoutOwnedByInput!]
  deleteMany: [PlaceScalarWhereInput!]
  updateMany: [PlaceUpdateManyWithWhereNestedInput!]
}

input PlaceUpdateManyWithWhereNestedInput {
  where: PlaceScalarWhereInput!
  data: PlaceUpdateManyDataInput!
}

input PlaceUpdateWithoutOwnedByDataInput {
  title: String
  description: String
  latitude: String
  longitude: String
  city: String
  state: String
  country: String
  street: String
  nearbyDescription: String
  accomodationDescription: String
  bedrooms: String
  bathrooms: String
  expirationDate: String
  numGuests: String
}

input PlaceUpdateWithWhereUniqueWithoutOwnedByInput {
  where: PlaceWhereUniqueInput!
  data: PlaceUpdateWithoutOwnedByDataInput!
}

input PlaceUpsertWithWhereUniqueWithoutOwnedByInput {
  where: PlaceWhereUniqueInput!
  update: PlaceUpdateWithoutOwnedByDataInput!
  create: PlaceCreateWithoutOwnedByInput!
}

input PlaceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  latitude: String
  latitude_not: String
  latitude_in: [String!]
  latitude_not_in: [String!]
  latitude_lt: String
  latitude_lte: String
  latitude_gt: String
  latitude_gte: String
  latitude_contains: String
  latitude_not_contains: String
  latitude_starts_with: String
  latitude_not_starts_with: String
  latitude_ends_with: String
  latitude_not_ends_with: String
  longitude: String
  longitude_not: String
  longitude_in: [String!]
  longitude_not_in: [String!]
  longitude_lt: String
  longitude_lte: String
  longitude_gt: String
  longitude_gte: String
  longitude_contains: String
  longitude_not_contains: String
  longitude_starts_with: String
  longitude_not_starts_with: String
  longitude_ends_with: String
  longitude_not_ends_with: String
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  state: String
  state_not: String
  state_in: [String!]
  state_not_in: [String!]
  state_lt: String
  state_lte: String
  state_gt: String
  state_gte: String
  state_contains: String
  state_not_contains: String
  state_starts_with: String
  state_not_starts_with: String
  state_ends_with: String
  state_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  nearbyDescription: String
  nearbyDescription_not: String
  nearbyDescription_in: [String!]
  nearbyDescription_not_in: [String!]
  nearbyDescription_lt: String
  nearbyDescription_lte: String
  nearbyDescription_gt: String
  nearbyDescription_gte: String
  nearbyDescription_contains: String
  nearbyDescription_not_contains: String
  nearbyDescription_starts_with: String
  nearbyDescription_not_starts_with: String
  nearbyDescription_ends_with: String
  nearbyDescription_not_ends_with: String
  accomodationDescription: String
  accomodationDescription_not: String
  accomodationDescription_in: [String!]
  accomodationDescription_not_in: [String!]
  accomodationDescription_lt: String
  accomodationDescription_lte: String
  accomodationDescription_gt: String
  accomodationDescription_gte: String
  accomodationDescription_contains: String
  accomodationDescription_not_contains: String
  accomodationDescription_starts_with: String
  accomodationDescription_not_starts_with: String
  accomodationDescription_ends_with: String
  accomodationDescription_not_ends_with: String
  bedrooms: String
  bedrooms_not: String
  bedrooms_in: [String!]
  bedrooms_not_in: [String!]
  bedrooms_lt: String
  bedrooms_lte: String
  bedrooms_gt: String
  bedrooms_gte: String
  bedrooms_contains: String
  bedrooms_not_contains: String
  bedrooms_starts_with: String
  bedrooms_not_starts_with: String
  bedrooms_ends_with: String
  bedrooms_not_ends_with: String
  bathrooms: String
  bathrooms_not: String
  bathrooms_in: [String!]
  bathrooms_not_in: [String!]
  bathrooms_lt: String
  bathrooms_lte: String
  bathrooms_gt: String
  bathrooms_gte: String
  bathrooms_contains: String
  bathrooms_not_contains: String
  bathrooms_starts_with: String
  bathrooms_not_starts_with: String
  bathrooms_ends_with: String
  bathrooms_not_ends_with: String
  expirationDate: String
  expirationDate_not: String
  expirationDate_in: [String!]
  expirationDate_not_in: [String!]
  expirationDate_lt: String
  expirationDate_lte: String
  expirationDate_gt: String
  expirationDate_gte: String
  expirationDate_contains: String
  expirationDate_not_contains: String
  expirationDate_starts_with: String
  expirationDate_not_starts_with: String
  expirationDate_ends_with: String
  expirationDate_not_ends_with: String
  numGuests: String
  numGuests_not: String
  numGuests_in: [String!]
  numGuests_not_in: [String!]
  numGuests_lt: String
  numGuests_lte: String
  numGuests_gt: String
  numGuests_gte: String
  numGuests_contains: String
  numGuests_not_contains: String
  numGuests_starts_with: String
  numGuests_not_starts_with: String
  numGuests_ends_with: String
  numGuests_not_ends_with: String
  ownedBy: UserWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [PlaceWhereInput!]
  OR: [PlaceWhereInput!]
  NOT: [PlaceWhereInput!]
}

input PlaceWhereUniqueInput {
  id: ID
}

type Query {
  place(where: PlaceWhereUniqueInput!): Place
  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!
  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place!]
  updatedAt: DateTime!
  createdAt: DateTime!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
  places: PlaceCreateManyWithoutOwnedByInput
}

input UserCreateOneWithoutPlacesInput {
  create: UserCreateWithoutPlacesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPlacesInput {
  id: ID
  email: String!
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  gender_ASC
  gender_DESC
  nationality_ASC
  nationality_DESC
  description_ASC
  description_DESC
  phoneNumber_ASC
  phoneNumber_DESC
  facebookUrl_ASC
  facebookUrl_DESC
  twitterUrl_ASC
  twitterUrl_DESC
  linkedinUrl_ASC
  linkedinUrl_DESC
  isVerified_ASC
  isVerified_DESC
  isAdmin_ASC
  isAdmin_DESC
  uwcName_ASC
  uwcName_DESC
  question1_ASC
  question1_DESC
  question2_ASC
  question2_DESC
  question3_ASC
  question3_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
  updatedAt: DateTime!
  createdAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  email: String
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
  places: PlaceUpdateManyWithoutOwnedByInput
}

input UserUpdateManyMutationInput {
  email: String
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
}

input UserUpdateOneRequiredWithoutPlacesInput {
  create: UserCreateWithoutPlacesInput
  update: UserUpdateWithoutPlacesDataInput
  upsert: UserUpsertWithoutPlacesInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutPlacesDataInput {
  email: String
  firstName: String
  lastName: String
  password: String
  gender: GENDER
  nationality: String
  description: String
  phoneNumber: String
  facebookUrl: String
  twitterUrl: String
  linkedinUrl: String
  isVerified: Boolean
  isAdmin: Boolean
  uwcName: UWC
  question1: String
  question2: String
  question3: String
}

input UserUpsertWithoutPlacesInput {
  update: UserUpdateWithoutPlacesDataInput!
  create: UserCreateWithoutPlacesInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  gender: GENDER
  gender_not: GENDER
  gender_in: [GENDER!]
  gender_not_in: [GENDER!]
  nationality: String
  nationality_not: String
  nationality_in: [String!]
  nationality_not_in: [String!]
  nationality_lt: String
  nationality_lte: String
  nationality_gt: String
  nationality_gte: String
  nationality_contains: String
  nationality_not_contains: String
  nationality_starts_with: String
  nationality_not_starts_with: String
  nationality_ends_with: String
  nationality_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  phoneNumber: String
  phoneNumber_not: String
  phoneNumber_in: [String!]
  phoneNumber_not_in: [String!]
  phoneNumber_lt: String
  phoneNumber_lte: String
  phoneNumber_gt: String
  phoneNumber_gte: String
  phoneNumber_contains: String
  phoneNumber_not_contains: String
  phoneNumber_starts_with: String
  phoneNumber_not_starts_with: String
  phoneNumber_ends_with: String
  phoneNumber_not_ends_with: String
  facebookUrl: String
  facebookUrl_not: String
  facebookUrl_in: [String!]
  facebookUrl_not_in: [String!]
  facebookUrl_lt: String
  facebookUrl_lte: String
  facebookUrl_gt: String
  facebookUrl_gte: String
  facebookUrl_contains: String
  facebookUrl_not_contains: String
  facebookUrl_starts_with: String
  facebookUrl_not_starts_with: String
  facebookUrl_ends_with: String
  facebookUrl_not_ends_with: String
  twitterUrl: String
  twitterUrl_not: String
  twitterUrl_in: [String!]
  twitterUrl_not_in: [String!]
  twitterUrl_lt: String
  twitterUrl_lte: String
  twitterUrl_gt: String
  twitterUrl_gte: String
  twitterUrl_contains: String
  twitterUrl_not_contains: String
  twitterUrl_starts_with: String
  twitterUrl_not_starts_with: String
  twitterUrl_ends_with: String
  twitterUrl_not_ends_with: String
  linkedinUrl: String
  linkedinUrl_not: String
  linkedinUrl_in: [String!]
  linkedinUrl_not_in: [String!]
  linkedinUrl_lt: String
  linkedinUrl_lte: String
  linkedinUrl_gt: String
  linkedinUrl_gte: String
  linkedinUrl_contains: String
  linkedinUrl_not_contains: String
  linkedinUrl_starts_with: String
  linkedinUrl_not_starts_with: String
  linkedinUrl_ends_with: String
  linkedinUrl_not_ends_with: String
  isVerified: Boolean
  isVerified_not: Boolean
  isAdmin: Boolean
  isAdmin_not: Boolean
  uwcName: UWC
  uwcName_not: UWC
  uwcName_in: [UWC!]
  uwcName_not_in: [UWC!]
  question1: String
  question1_not: String
  question1_in: [String!]
  question1_not_in: [String!]
  question1_lt: String
  question1_lte: String
  question1_gt: String
  question1_gte: String
  question1_contains: String
  question1_not_contains: String
  question1_starts_with: String
  question1_not_starts_with: String
  question1_ends_with: String
  question1_not_ends_with: String
  question2: String
  question2_not: String
  question2_in: [String!]
  question2_not_in: [String!]
  question2_lt: String
  question2_lte: String
  question2_gt: String
  question2_gte: String
  question2_contains: String
  question2_not_contains: String
  question2_starts_with: String
  question2_not_starts_with: String
  question2_ends_with: String
  question2_not_ends_with: String
  question3: String
  question3_not: String
  question3_in: [String!]
  question3_not_in: [String!]
  question3_lt: String
  question3_lte: String
  question3_gt: String
  question3_gte: String
  question3_contains: String
  question3_not_contains: String
  question3_starts_with: String
  question3_not_starts_with: String
  question3_ends_with: String
  question3_not_ends_with: String
  places_every: PlaceWhereInput
  places_some: PlaceWhereInput
  places_none: PlaceWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

enum UWC {
  PEARSON
  ATLANTIC
}
`
      }
    